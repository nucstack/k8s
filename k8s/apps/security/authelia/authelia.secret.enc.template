# yamllint disable
apiVersion: v1
kind: Secret
metadata:
  name: authelia-helm-values
  namespace: security
type: Opaque
stringData:
  values.yaml: |
    configMap:
      access_control:
        default_policy: deny
        networks:
          - name: internal
            networks:
              - ${K3S_SERVICE_CIDR}
              - ${K3S_CLUSTER_CIDR}
          - name: vpn
            networks:
              - ${AUTHELIA_VPN_CIDR}
          - name: user
            networks:
              - ${AUTHELIA_USER_CIDR}
        rules:
          # any authenicated user can view the landing page
          - domain: "home.${DOMAIN}"
            policy: one_factor
            subject:
              - ["group:users"]
          # administrators can access anything: requires 2FA
          - domain: "*.${DOMAIN}"
            policy: two_factor
            subject:
              - ["group:administrators"]

          - domain: "grafana.${DOMAIN}"
            policy: two_factor
            subject:
              - ["group:grafana"]
          - domain: "esphome.${DOMAIN}"
            policy: two_factor
            subject:
              - ["group:esphome"]
          - domain: "vscode-hass.${DOMAIN}"
            policy: two_factor
            subject:
              - ["group:vscode-hass"]
          - domain: "jupyterlab.${DOMAIN}"
            policy: two_factor
            subject:
              - ["group:jupyterlab"]
          - domain: "node-red.${DOMAIN}"
            policy: two_factor
            subject:
              - ["group:node-red"]

      theme: dark
      authentication_backend:
        disable_reset_password: false
        ldap:
          implementation: custom
          url: "ldaps://${LDAP_SERVER}"
          base_dn: ${LDAP_ROOT}
          additional_users_dn: cn=users
          additional_groups_dn: cn=groups
          users_filter: "(&({username_attribute}={input})(objectClass=person))"
          groups_filter: "(member={dn})"
          group_name_attribute: "cn"
          user: uid=${LDAP_ADMIN_USERNAME},cn=users,${LDAP_ROOT}
          tls:
            skip_verify: false
      notifier:
        smtp:
          enabledSecret: true
          username: ${AUTHELIA_SMTP_USERNAME}
          host: smtp.gmail.com
          port: 587
          sender: ${AUTHELIA_SMTP_USERNAME}
          identifier: ${AUTHELIA_SMTP_IDENT}
          subject: "[Authelia] {title}"
          startup_check_address: ${AUTHELIA_SMTP_USERNAME}
      identity_providers:
        oidc:
          enabled: true
          access_token_lifespan: 1h
          authorize_code_lifespan: 1m
          id_token_lifespan: 1h
          refresh_token_lifespan: 90m
          enable_client_debug_messages: true
          minimum_parameter_entropy: 8
          clients:
            - id: kubernetes
              description: Kubernetes
              secret: ${AUTHELIA_OIDC_K8S_CLIENT_SECRET}
              public: false
              authorization_policy: two_factor
              scopes:
                - openid
                - profile
                - email
                - offline_access
              redirect_uris:
                - http://localhost:8000
    secret:
      ldap:
        key: LDAP_PASSWORD
        value: ${LDAP_ADMIN_PASSWORD}
      storage:
        key: STORAGE_PASSWORD
        value: ${AUTHELIA_POSTGRES_PASSWORD}
      storageEncryptionKey:
        key: STORAGE_ENCRYPTION_KEY
        value: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
      smtp:
        key: SMTP_PASSWORD
        value: ${AUTHELIA_SMTP_PASSWORD}
      redis:
        key: REDIS_PASSWORD
        value: ${AUTHELIA_REDIS_PASSWORD}
      session:
        key: SESSION_ENCRYPTION_KEY
        value: ${AUTHELIA_SESSION_ENCRYPTION_KEY}
      oidcPrivateKey:
        key: OIDC_PRIVATE_KEY
        value: "${AUTHELIA_OIDC_PRIVATE_KEY}"
      oidcHMACSecret:
        key: OIDC_HMAC_SECRET
        value: "${AUTHELIA_OIDC_HMAC_SECRET}"
