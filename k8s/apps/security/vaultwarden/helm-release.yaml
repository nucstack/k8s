---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: vaultwarden
      version: 3.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/vaultwarden
      tag: v1.23.0
    env:
      DATA_FOLDER: "config"
      DOMAIN: https://vaultwarden.${SECRET_DOMAIN}
      SIGNUPS_ALLOWED: "false"
      SMTP_FROM_NAME: Vaultwarden
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SSL: "true"
      TZ: "America/New_York"
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_ENABLED: true
      WEBSOCKET_PORT: 3012
    envFrom:
      - secretRef:
          name: vaultwarden
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-key"
          hajimari.io/appName: VaultWarden
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: vaultwarden.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: 3012
              - path: /notifications/hub/negotiate
                pathType: Prefix
        tls:
          - hosts:
              - vaultwarden.${SECRET_DOMAIN}
      admin:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-auth@kubernetescrd"
        hosts:
          - host: "vaultwarden.${SECRET_DOMAIN}"
            paths:
              - path: /admin
                pathType: Prefix
        tls:
          - hosts:
              - "vaultwarden.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      secret.reloader.stakater.com/reload: "vaultwarden"
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 2000Mi
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true
