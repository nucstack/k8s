---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: home-automation
  name: unifi-downloader
spec:
  schedule: "*/2 * * * *"
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 3
      ttlSecondsAfterFinished: 300
      template:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: feature.node.kubernetes.io/custom-backup-drive
                        operator: In
                        values:
                          - "true"
          restartPolicy: OnFailure
          containers:
            - name: unifi-downloader
              image: "${SECRET_DOCKER_PRIVATE_REGISTRY}/unifi-downloader:0.0.5"
              envFrom:
                - secretRef:
                    name: unifi-downloader
              volumeMounts:
                - name: download-path
                  mountPath: /download
          volumes:
            - name: download-path
              hostPath:
                path: /mnt/data
                type: Directory
---
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: home-automation
  name: unifi-rclone
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 3
      ttlSecondsAfterFinished: 300
      template:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: feature.node.kubernetes.io/custom-backup-drive
                        operator: In
                        values:
                          - "true"
          restartPolicy: OnFailure
          containers:
            - name: unifi-downloader
              image: "${SECRET_DOCKER_PRIVATE_REGISTRY}/rclone:0.0.1"
              args:
                - "copy"
                - "/cctv"
                - "/backup"
                - "-v"
              volumeMounts:
                - name: cctv-path
                  mountPath: /cctv
                - name: backup-path
                  mountPath: /backup
          volumes:
            - name: cctv-path
              hostPath:
                path: /mnt/data
                type: Directory
            - name: backup-path
              nfs:
                path: "${SECRET_NFS_CCTV_PATH}"
                server: "${SECRET_NFS_HOST}"
