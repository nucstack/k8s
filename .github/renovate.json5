{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    "github>nucstack/k8s//.github/renovate/labels",
    "github>nucstack/k8s//.github/renovate/semanticCommits"
  ],
  "timezone": "America/New_York",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  // set up ignored deps
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ],
  "docker-compose": {
    "fileMatch": [
      "(^|\/)docker-compose.*\.ya?ml$",
    ]
  },
  "flux": {
    "fileMatch": [
      "k8s/.+\\.yaml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "k8s/.+/helm-release\\.yaml$"
    ]
  },
  "helmv3": {
    "fileMatch": [
      "k8s/charts/.+/Chart\\.yaml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "k8s/.+\\.yaml$"
    ],
    "ignorePaths": [
      "clusters",
      "charts"
    ],
  },
  "regexManagers": [
    // regexManager to read and process HelmReleases and CRDs
    {
      "fileMatch": [
        "k8s/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process cert-manager CRD's
    {
      "fileMatch": [
        "k8s/crds/cert-manager/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process kube-prometheus-stack and velero CRD's
    {
      "fileMatch": [
        "k8s/crds/kube-prometheus-stack/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process Traefik CRD's
    {
      "fileMatch": [
        "k8s/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process External DNS CRD's
    {
      "fileMatch": [
        "k8s/crds/external-dns/.+\\.yaml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?)\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "github-releases"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // custom versioning
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "labels": [
        "renovate/image",
        "dep/major"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "labels": [
        "renovate/image",
        "dep/minor"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "labels": [
        "renovate/image",
        "dep/patch"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "labels": [
        "renovate/helm",
        "dep/major"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "labels": [
        "renovate/helm",
        "dep/minor"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "labels": [
        "renovate/helm",
        "dep/patch"
      ]
    }
  ]
}
