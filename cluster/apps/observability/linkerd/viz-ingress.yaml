---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: linkerd-web-ingress
  namespace: linkerd-viz
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local:8084
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Origin "web.linkerd-viz.svc.cluster.local:8084";
      proxy_hide_header l5d-remote-ip;
      proxy_hide_header l5d-server-id;              
    meta.helm.sh/release-name: linkerd-viz
    meta.helm.sh/release-namespace: linkerd
    nginx.ingress.kubernetes.io/auth-response-headers: 'Remote-User,Remote-Name,Remote-Groups,Remote-Email'
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}"
    nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
    nginx.ingress.kubernetes.io/auth-url: 'http://authelia.security.svc.cluster.local/api/verify'
    nginx.ingress.kubernetes.io/configuration-snippet: proxy_set_header X-Forwarded-Method $request_method;
    nginx.org/websocket-services: web
spec:
  tls:
    - hosts:
        - "linkerd.${SECRET_DOMAIN}"
      secretName: linkerd-viz-tls
  rules:
    - host: "linkerd.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 8084              
