---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  install:
    timeout: 10m
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  releaseName: longhorn
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.1.0
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
      interval: 5m
  values:
    persistence:
      defaultClass: true
      recurringJobs:
        enable: true
        jobList: '[{"name":"backup", "task":"backup", "cron":"30 2 * * *", "retain":5}]'
    defaultSettings:
      backupTarget: "nfs://${SECRET_NFS_HOST}:${SECRET_NFS_BACKUP_PATH}"
    ingress:
      enabled: true
      host: longhorn.${SECRET_DOMAIN}
      tlsSecret: longhorn-cert
      tls: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/websocket-services: true
        nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        nginx.ingress.kubernetes.io/configuration-snippet: proxy_set_header X-Forwarded-Method $request_method;
